name: Integration

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  checks: write
  pull-requests: write

jobs:
  validate-bicep:
    name: Validate Bicep Files
    environment: dev
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZ_CREDS }}
      - name: Bicep IaC - validation
        uses: azure/arm-deploy@v1
        with:
          deploymentName: Validation-${{ github.run_number }}
          deploymentMode: Validate
          scope: subscription
          region: ${{ env.location }}
          template: deploy/resourceGroup.bicep
  code-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Checkov GitHub Action
        # You may pin to the exact commit or the version.
        # uses: bridgecrewio/checkov-action@99bb2caf247dfd9f03cf984373bc6043d4e32ebf
        uses: bridgecrewio/checkov-action@master
        with:
          # directory with infrastructure code to scan
          directory: deploy/
          # the output format, one of: cli, json, junitxml, github_failed_only, or sarif. Default: sarif
          output_format: junitxml
          config_file: checkov/config.yml
          #skip_check: CKV_AZURE_1
          # display only failed checks
          #quiet: true
          # do not return an error code if there are failed checks
          #soft_fail: true
          # run only on a specific infrastructure
          #framework: bicep
          # log level
          #log_level: WARNING
      
      - run: echo $CHECKOV_RESULTS >> checkov.xml
      
      - name: Publish Unit Test Results
        id: test-results
        uses: EnricoMi/publish-unit-test-result-action@master
        if: always()
        with:
          # File patterns of test result files. Supports *, **, ?, and []. Use multiline string for multiple patterns.
          junit_files: "**/checkov.xml"
      
      - name: Set badge color
        shell: bash
        run: |
          case ${{ fromJSON( steps.test-results.outputs.json ).conclusion }} in
            success)
              echo "BADGE_COLOR=31c653" >> $GITHUB_ENV
              ;;
            failure)
              echo "BADGE_COLOR=800000" >> $GITHUB_ENV
              ;;
            neutral)
              echo "BADGE_COLOR=696969" >> $GITHUB_ENV
              ;;
          esac
      - name: Create badge
        uses: emibcn/badge-action@d6f51ff11b5c3382b3b88689ae2d6db22d9737d1
        with:
          label: Tests
          status: '${{ fromJSON( steps.test-results.outputs.json ).formatted.stats.tests }} tests, ${{ fromJSON( steps.test-results.outputs.json ).formatted.stats.runs }} runs: ${{ fromJSON( steps.test-results.outputs.json ).conclusion }}'
          color: ${{ env.BADGE_COLOR }}
          path: demo-project.svg

      - name: Upload badge to Gist
        # Upload only for master branch
        if: >
          github.event_name == 'workflow_run' && github.event.workflow_run.head_branch == 'main' ||
          github.event_name != 'workflow_run' && github.ref == 'refs/heads/main'
        uses: andymckay/append-gist-action@1fbfbbce708a39bd45846f0955ed5521f2099c6d
        with:
          token: ${{ secrets.GIST_TOKEN }}
          gistURL: https://gist.github.com/SebastianGredal/f48a1cfcf5fd6fd72485130923682c5a
          file: demo-project.svg
